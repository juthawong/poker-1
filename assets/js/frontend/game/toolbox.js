// Generated by CoffeeScript 1.10.0
(function() {
  var constants, getCardName, globalVariables, showPlayedCardsForUser, sortCards, toggleCardSelection;

  constants = require('./constants.js');

  globalVariables = require('./globalVariables.js');

  sortCards = function(array) {
    var sortNumber;
    sortNumber = function(a, b) {
      return a - b;
    };
    return array.sort(sortNumber);
  };

  getCardName = function(n) {
    var cardName;
    cardName = '';
    switch (n) {
      case 1:
        cardName = 'bigJoker';
        break;
      case 2:
        cardName = 'smallJoker';
        break;
      case 3:
        cardName = 'sevenOfSpades';
        break;
      case 4:
        cardName = 'sevenOfHearts';
        break;
      case 5:
        cardName = 'sevenOfClubs';
        break;
      case 6:
        cardName = 'sevenOfDiamonds';
        break;
      case 7:
        cardName = 'twoOfSpades';
        break;
      case 8:
        cardName = 'twoOfHearts';
        break;
      case 9:
        cardName = 'twoOfClubs';
        break;
      case 10:
        cardName = 'twoOfDiamonds';
        break;
      case 11:
        cardName = 'aceOfSpades';
        break;
      case 12:
        cardName = 'kingOfSpades';
        break;
      case 13:
        cardName = 'queenOfSpades';
        break;
      case 14:
        cardName = 'jackOfSpades';
        break;
      case 15:
        cardName = 'tenOfSpades';
        break;
      case 16:
        cardName = 'nineOfSpades';
        break;
      case 17:
        cardName = 'eightOfSpades';
        break;
      case 18:
        cardName = 'sixOfSpades';
        break;
      case 19:
        cardName = 'fiveOfSpades';
        break;
      case 20:
        cardName = 'aceOfHearts';
        break;
      case 21:
        cardName = 'kingOfHearts';
        break;
      case 22:
        cardName = 'queenOfHearts';
        break;
      case 23:
        cardName = 'jackOfHearts';
        break;
      case 24:
        cardName = 'tenOfHearts';
        break;
      case 25:
        cardName = 'nineOfHearts';
        break;
      case 26:
        cardName = 'eightOfHearts';
        break;
      case 27:
        cardName = 'sixOfHearts';
        break;
      case 28:
        cardName = 'fiveOfHearts';
        break;
      case 29:
        cardName = 'aceOfClubs';
        break;
      case 30:
        cardName = 'kingOfClubs';
        break;
      case 31:
        cardName = 'queenOfClubs';
        break;
      case 32:
        cardName = 'jackOfClubs';
        break;
      case 33:
        cardName = 'tenOfClubs';
        break;
      case 34:
        cardName = 'nineOfClubs';
        break;
      case 35:
        cardName = 'eightOfClubs';
        break;
      case 36:
        cardName = 'sixOfClubs';
        break;
      case 37:
        cardName = 'fiveOfClubs';
        break;
      case 38:
        cardName = 'aceOfDiamonds';
        break;
      case 39:
        cardName = 'kingOfDiamonds';
        break;
      case 40:
        cardName = 'queenOfDiamonds';
        break;
      case 41:
        cardName = 'jackOfDiamonds';
        break;
      case 42:
        cardName = 'tenOfDiamonds';
        break;
      case 43:
        cardName = 'nineOfDiamonds';
        break;
      case 44:
        cardName = 'eightOfDiamonds';
        break;
      case 45:
        cardName = 'sixOfDiamonds';
        break;
      case 46:
        cardName = 'fiveOfDiamonds';
    }
    return cardName;
  };

  showPlayedCardsForUser = function(n, valuesOfPlayedCards) {
    var cardsToRemove, i, j, k, l, playedCard, ref, ref1, ref2, results, startX, startY, userPlayedCards;
    startX = null;
    startY = null;
    userPlayedCards = null;
    switch (n) {
      case 0:
        startX = globalVariables.screenWidth / 2 - (valuesOfPlayedCards.length + 3) * globalVariables.scaledCardWidth / 8;
        startY = globalVariables.screenHeight - 2 * globalVariables.scaledCardHeight - 2 * constants.MARGIN;
        userPlayedCards = globalVariables.currentUserPlayedCards;
        break;
      case 1:
        startX = globalVariables.screenWidth - (valuesOfPlayedCards.length + 3) * globalVariables.scaledCardWidth / 4 - constants.MARGIN;
        startY = globalVariables.screenHeight / 2 - globalVariables.scaledCardHeight / 2;
        userPlayedCards = globalVariables.user1PlayedCards;
        break;
      case 2:
        startX = globalVariables.screenWidth / 2 - (valuesOfPlayedCards.length + 3) * globalVariables.scaledCardWidth / 8;
        startY = constants.MARGIN;
        userPlayedCards = globalVariables.user2PlayedCards;
        break;
      case 3:
        startX = constants.MARGIN;
        startY = globalVariables.screenHeight / 2 - globalVariables.scaledCardHeight / 2;
        userPlayedCards = globalVariables.user3PlayedCards;
    }
    cardsToRemove = [];
    for (i = j = 0, ref = userPlayedCards.children.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      cardsToRemove.push(userPlayedCards.children[i]);
    }
    for (i = k = 0, ref1 = cardsToRemove.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
      userPlayedCards.remove(cardsToRemove[i]);
    }
    results = [];
    for (i = l = 0, ref2 = valuesOfPlayedCards.length; 0 <= ref2 ? l < ref2 : l > ref2; i = 0 <= ref2 ? ++l : --l) {
      playedCard = userPlayedCards.create(startX + i * globalVariables.scaledCardWidth / 4, startY, getCardName(valuesOfPlayedCards[i]));
      playedCard.width = globalVariables.scaledCardWidth;
      results.push(playedCard.height = globalVariables.scaledCardHeight);
    }
    return results;
  };

  toggleCardSelection = function(sprite) {
    if (!sprite.isSelected) {
      sprite.y = sprite.y - constants.SELECTED_CARD_Y_OFFSET;
    } else {
      sprite.y = sprite.y + constants.SELECTED_CARD_Y_OFFSET;
    }
    return sprite.isSelected = !sprite.isSelected;
  };

  module.exports = {
    sortCards: sortCards,
    getCardName: getCardName,
    toggleCardSelection: toggleCardSelection,
    showPlayedCardsForUser: showPlayedCardsForUser
  };

}).call(this);
